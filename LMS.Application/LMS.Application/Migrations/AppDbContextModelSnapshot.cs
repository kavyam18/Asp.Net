// <auto-generated />
using System;
using LMS.Application.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMS.Application.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LMS.Application.Models.Entities.AddressDetail", b =>
                {
                    b.Property<Guid>("Address_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AddressType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DoorNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LandMark")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Address_Id");

                    b.HasIndex("PrimaryInfoId");

                    b.ToTable("AddressDetails");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.BankDetail", b =>
                {
                    b.Property<Guid>("Bank_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("AccountNo")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IFSC_Code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Bank_Id");

                    b.HasIndex("PrimaryInfoId");

                    b.ToTable("BankDetails");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.ContactDetail", b =>
                {
                    b.Property<Guid>("Contact_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("ContactNo")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.HasKey("Contact_Id");

                    b.HasIndex("PrimaryInfoId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.EducationDetail", b =>
                {
                    b.Property<Guid>("Education_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("EducationType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InstituteName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Percentage")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UniversityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("YearOfPassing")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Education_Id");

                    b.HasIndex("PrimaryInfoId");

                    b.ToTable("EducationDetails");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.ExperienceDetail", b =>
                {
                    b.Property<Guid>("Experience_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateOfJoing")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateOfRelieving")
                        .HasColumnType("datetime");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<int>("YearOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Experience_Id");

                    b.HasIndex("PrimaryInfoId");

                    b.ToTable("Experiences");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.PrimaryInfo", b =>
                {
                    b.Property<Guid>("PrimaryInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DateOfJoining")
                        .HasColumnType("date");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmployeeStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Employee_Id")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Employee_Name")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("SecondaryInfoId")
                        .HasColumnType("char(36)");

                    b.HasKey("PrimaryInfoId");

                    b.ToTable("PrimaryInfos");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.SecondaryInfo", b =>
                {
                    b.Property<Guid>("Secondary_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<long>("AadharNo")
                        .HasColumnType("bigint");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PanNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PassportNo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SpouseName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Secondary_Id");

                    b.HasIndex("PrimaryInfoId")
                        .IsUnique();

                    b.ToTable("SecondaryInfos");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.TechnicalSkill", b =>
                {
                    b.Property<Guid>("Technical_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("SkillRating")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SkillType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("YearOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Technical_Id");

                    b.ToTable("TechnicalSkills");
                });

            modelBuilder.Entity("PrimaryInfoTechnicalSkills", b =>
                {
                    b.Property<Guid>("PrimaryInfoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TechnicalSkillId")
                        .HasColumnType("char(36)");

                    b.HasKey("PrimaryInfoId", "TechnicalSkillId");

                    b.HasIndex("TechnicalSkillId");

                    b.ToTable("PrimaryInfoTechnicalSkills");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.AddressDetail", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", "PrimaryInfo")
                        .WithMany("AddressDetails")
                        .HasForeignKey("PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryInfo");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.BankDetail", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", "PrimaryInfo")
                        .WithMany("BankDetails")
                        .HasForeignKey("PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryInfo");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.ContactDetail", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", "PrimaryInfo")
                        .WithMany("ContactDetails")
                        .HasForeignKey("PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryInfo");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.EducationDetail", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", "PrimaryInfo")
                        .WithMany("EducationDetails")
                        .HasForeignKey("PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryInfo");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.ExperienceDetail", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", "PrimaryInfo")
                        .WithMany("ExperienceDetails")
                        .HasForeignKey("PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryInfo");
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.SecondaryInfo", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", "PrimaryInfo")
                        .WithOne("SecondaryInfo")
                        .HasForeignKey("LMS.Application.Models.Entities.SecondaryInfo", "PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimaryInfo");
                });

            modelBuilder.Entity("PrimaryInfoTechnicalSkills", b =>
                {
                    b.HasOne("LMS.Application.Models.Entities.PrimaryInfo", null)
                        .WithMany()
                        .HasForeignKey("PrimaryInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMS.Application.Models.Entities.TechnicalSkill", null)
                        .WithMany()
                        .HasForeignKey("TechnicalSkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LMS.Application.Models.Entities.PrimaryInfo", b =>
                {
                    b.Navigation("AddressDetails");

                    b.Navigation("BankDetails");

                    b.Navigation("ContactDetails");

                    b.Navigation("EducationDetails");

                    b.Navigation("ExperienceDetails");

                    b.Navigation("SecondaryInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
